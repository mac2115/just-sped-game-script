getgenv().autofarm = true
getgenv().autoquest = true
getgenv().platform  = true
getgenv().noclip = true
getgenv().corps = true
getgenv().chestfarm = true
getgenv().regen = true

local Part = Instance.new("Part", workspace)
local vim = game:service("VirtualInputManager")
local mobTable = {"Giant Sand Kip",
"Sand Kip",
"Turtling",
"Goblin",
"TheFirstDesire",
"Maxwell",
"Giant Evil Leech",
"Abyssal Watcher",
"Snow Dweller",
"Rock Pig",
"Purple Goblin",
"Rat Kin",
"Water Turtle",
"Fire Bird",
"Cyclops"
,"Sand Onion"
,"Stone Slicer",
"Goblin Archer",
"Cave Goblin",
"Abyssal Giant",
"Cave Sha",
"Abyssal Skinner",
"Bandit Gunner",
"Electro Raptor",
"Abyssal Puppet",
"Abyssal Archer",
"Demon Grunt",
"Cyclops Bot",
"Darkling",
"Cave Rex"
,
"Evil Leech",
"Stone Golem",
"Sand Golem",
"Mouse Kin",
"Sand Warrior",
"Lightning Entity",
"Bandit",
"Bandit Commander",
"Goblin Commander"
,"Goblin Commando",
"Deer"

}
local questTable = {
"Kippy",
"Zoe The Farmer",
"Falic The Farmer",
"Goblin Slayer",
"Kasper",
"Isaac, Towns Keep",
"James, Shell Smith",
"Mranimebar, Collector",
"Remi, White Whistle",
"Shell Collector",
"Sick Farmer Boy",
"Tina, Shaman Doctor",

}
local areaTable = {}
local npcTable = {}
local sellerTable = {
    "Corpse Harvester",
"YungSkubs, Butcher"
}

local chestTable = {
"Basic Chest",
"Iron Chest"


}


local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false

local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end

 local function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end
game.StarterGui:SetCore("SendNotification", {
    Title = "Make sure to join my discord server!"; 
    Text = "https://discord.gg/7Zd6xWc9M4"; 
    Icon = ""; 
    Duration = 20; 
    })

local function noclip()
    game:GetService("RunService").Stepped:Connect(
        function()
            if getgenv().noclip then
                pcall(
                    function()
                        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                            if v.ClassName == "Part" or v.ClassName == "MeshPart" then
                                v.CanCollide = false
                            end
                        end
                    end
                )
            else
                pcall(
                    function()
                        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                            if v.ClassName == "Part" or v.ClassName == "MeshPart" then
                                v.CanCollide = true
                            end
                        end
                    end
                )
            end
        end
    )
end

local function lowgraphics()
    for _,v in pairs(workspace:GetDescendants()) do
        if v.ClassName == "Part"
        or v.ClassName == "SpawnLocation"
        or v.ClassName == "WedgePart"
        or v.ClassName == "Terrain"
        or v.ClassName == "MeshPart" then
        v.Material = "Plastic"
        end
        end
        
        for _,v in pairs(workspace:GetDescendants()) do
        if v.ClassName == "Decal"
        or v.ClassName == "Texture" then
        v:Destroy()
        end
        end

end
local function infstaminarunning()
if getgenv().infstamina == true then
    local __Namecall
    __Namecall = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
        local Args, Method = {...}, getnamecallmethod()
        
        if tostring(self.Name):match('Running') and tostring(Method):match('FireServer') then
            return
        end
        
        return __Namecall(self, ...)
    end))

else
    return
end

end
local function infstaminaflying()
    if getgenv().infstamina2 == true then

       
        local __Namecall
    __Namecall = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
        local Args, Method = {...}, getnamecallmethod()
        
        if tostring(self.Name):match('Flying') and tostring(Method):match('FireServer') then
            return
        end
        
        return __Namecall(self, ...)
    end))


    else
        return
    
    end
    
    
    end
    

 local function serverhop()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end


local function regen()
    if getgenv().regen == true then 
    
    game:GetService("Workspace").Main.Players.LocalPlayer.States.Regen = true
    end
    end


local function antiafk()
    spawn(function()
        wait(3)
        local VirtualUser=game:service'VirtualUser'
        game:service('Players').LocalPlayer.Idled:connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
        end)
end)


end

local function area()
    spawn(function()
for _,v in pairs(game:GetService("Workspace").Main.Areas:GetChildren()) do --same thing as in mobs
    if v:IsA("Part") then
        table.insert(areaTable, v.Name)
    end
 end
end)
end

local function npcs()
    spawn(function()
for _,v in pairs(game:GetService("Workspace").GameObjects.NPCs:GetChildren()) do --same thing as in mobs
    if v:IsA("Model") then
        table.insert(npcTable, v.Name)
    end
 end
end)
end

npcs()
area()



local function talktonpcs()
spawn(function()

    game:GetService("ReplicatedStorage"):WaitForChild("RepStorage"):WaitForChild("Remotes"):WaitForChild("TalkToNPC"):FireServer(npc,"")

end)
end

local function sellcorps()
if getgenv().corps == true then 


    game:GetService("ReplicatedStorage"):WaitForChild("RepStorage"):WaitForChild("Remotes"):WaitForChild("TalkToNPC"):FireServer(seller,"")

else
    return
end
end


local function platformstand()
if getgenv().platform == true then
    Part.Anchored = true
    Part.Size = Vector3.new(10, .001, 10)
    while getgenv().platform do
        wait()
    Part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.02, 0)
    end

else
    return
end
end
local function areatp()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Main.Areas[area1].CFrame

end




local function autoquest()
if getgenv().autoquest then


    game:GetService("ReplicatedStorage"):WaitForChild("RepStorage"):WaitForChild("Remotes"):WaitForChild("TalkToNPC"):FireServer(quest,"")

else
    return
end
end



local function autofarm()
spawn(function()
if getgenv().autofarm then

    if game:GetService("Workspace").Main.Players:FindFirstChild(mob)    then
       
        if game:GetService("Workspace").Main.Players[mob].Humanoid.Health > 0 then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Main.Players[mob].HumanoidRootPart.CFrame * CFrame.new(0,0,position)
    game:GetService("Players").LocalPlayer.Character.ClientStateReplication.M1:FireServer(true)
        elseif game:GetService("Workspace").Main.Players[mob].Humanoid.Health == 0  then
        
            game:GetService("Workspace").Main.Players[mob]:Destroy()


        end

        
    else
        return
    end


else
    return

end
end)
end




local function chestfarm()
    spawn(function()
        if getgenv().chestfarm then
            if game:GetService("Workspace"):FindFirstChild(chest) and game:GetService("Workspace")[chest]:FindFirstChildOfClass("Part") then

                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")[chest].Part.CFrame *CFrame.new(0,0,0)
                fireproximityprompt(game:GetService("Workspace")[chest].Open, 1, true)


            end
        end


    end)
end



local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Lee rpg v1.4 by Mac#0014 discord server: 7Zd6xWc9M4", "DarkTheme")
local Tab = Window:NewTab("Autofarms")
local Section = Tab:NewSection("Farms")


Section:NewToggle(
    "Autofarm",
    "Toggles Autofarm",
    function(state)
        getgenv().autofarm = state
       
        while true do
            task.wait()
            if getgenv().autofarm == false then
                break
            end
        
            autofarm()
        end
    end
)

local Section = Tab:NewSection("Autofarm settings")
Section:NewDropdown("Choose mob", "DropdownInf", mobTable, function(currentOption)
    mob = currentOption
end)


Section:NewSlider("Farm position", "SliderInfo", 10, -10, function(s) -- 500 (MaxValue) | 0 (MinValue)
    position = s
end)
local Section = Tab:NewSection("Auto quests")

Section:NewToggle("Autoquest toggle", "ToggleInfo", function(state)
    getgenv().autoquest = state
       
    while true do
        task.wait()
        if getgenv().autoquest == false then
            break
        end
    
        autoquest()
    end

end)

Section:NewDropdown("Choose quest", "DropdownInf", questTable, function(currentOption)
    quest = currentOption
end)
local Section = Tab:NewSection("Auto sell corps")

Section:NewToggle("Sell corps toggle", "ToggleInfo", function(state)
    getgenv().sellcorps = state
       
    while true do
        task.wait()
        if getgenv().sellcorps == false then
            break
        end
    
        sellcorps()
    end

end)


Section:NewDropdown("Choose seller", "DropdownInf", sellerTable, function(currentOption)
    seller = currentOption
end)
local Section = Tab:NewSection("Autofarm chests ")
Section:NewToggle("Chest farm toggle ", "ToggleInfo", function(state)
    getgenv().chestfarm = state
       
    while true do
        task.wait()
        if getgenv().chestfarm == false then
            break
        end
    
        chestfarm()
    end

end)


Section:NewDropdown("Choose chest", "DropdownInf", chestTable, function(currentOption)
    chest = currentOption
end)









local Tab = Window:NewTab("Teleports")
local Section = Tab:NewSection("Area teleports")
Section:NewDropdown("Choose area to tp to", "DropdownInf", areaTable, function(currentOption)
    area1 = currentOption
    areatp()
end)

Section:NewDropdown("Talk to npc", "DropdownInf", npcTable, function(currentOption)
    npc = currentOption
   talktonpcs()
end)



Section:NewToggle("Platform toggle (to prevent falling to void)", "ToggleInfo", function(state)
  
       getgenv().platform = state
   platformstand()
end)


local Tab = Window:NewTab("Misc")
local Section = Tab:NewSection("Misc")

Section:NewToggle("Always regen Hp ", "ToggleInfo", function(state)
    getgenv().regen = state
       
    while true do
        task.wait()
        if getgenv().regen == false then
            break
        end
    
        regen()
    end

end)
Section:NewButton("Inf stamina while running", "ButtonInfo", function()
    infstaminarunning()
end)

Section:NewButton("Inf stamina while flying", "ButtonInfo", function()
    infstaminaflying()
end)
Section:NewToggle("Noclip toggle ", "ToggleInfo", function(state)
    
       getgenv().noclip = state
       noclip()
    
end)

Section:NewButton("Antiafk", "ButtonInfo", function()
    antiafk()
end)

Section:NewButton("Serverhop", "ButtonInfo", function()
    serverhop()
end)

local Tab = Window:NewTab("Settings")
local Section = Tab:NewSection("Settings")


Section:NewButton("Potato pc mode", "ButtonInfo", function()
    lowgraphics()
end)

Section:NewKeybind("Ui toggle", "KeybindInfo", Enum.KeyCode.X, function()
	Library:ToggleUI()
end)
local Section = Tab:NewSection("Discord server:https://discord.gg/7Zd6xWc9M4")
